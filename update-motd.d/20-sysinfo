#!/bin/bash

# Load style
source "/etc/update-motd.d/default"
source "$DEFAULT_THEME"

# Fetch Information
read last_login_ip last_login_date <<< "$(last $logname -n 1 -F | awk 'NR==1 {print $3, $4, $5, $6, $7, $8}')"
last_login_date="${last_login_date:-None}"
if [[ "$last_login_date" != "None" ]]; then
    last_login_date="$(date -d "$last_login_date" +"$date_format")"
fi

up_time="$(uptime -p | sed -e 's/^up //' -e 's/hour*/hr/' -e 's/minute*/min/' -e 's/,//g')"
up_date="$(date -d "$(uptime -s)" +"$date_format")"

read disk_free disk_usage <<< "$(df -h / | awk 'NR==2 {print $4, $3 " / " $2}')"

read memory_free memory_usage <<< "$(free -h --si | awk '/^Mem:/ {print $4, $3 " / " $2}')"

temperature="$(vcgencmd measure_temp | awk -F"=" '{print $2}' | cut -d"'" -f1)"

cpu_usage="$(awk '/^cpu / {usage=($5*100)/($2+$3+$4+$5+$6+$7+$8+$9+$10); printf "%.1f\n", 100-usage}' /proc/stat)"
process_count="$(ps aux | wc -l)"

user_count="$(users | wc -w)"

ip="$(hostname -I)" 

# FIRST COLUMN
info1="$(color $title "Last") $(color $muted "....")$(color $title "$colon") $(color $second "$last_login_date") $(color $muted "$bullet $last_login_ip")"

info3="$(color $title "Uptime") $(color $muted "..")$(color $title "$colon") $(color $second "$up_time") $(color $muted "$bullet $up_date")"

info5="$(color $title "Disk") $(color $muted "....")$(color $title "$colon") $(color $second "$disk_usage") $(color $muted "$bullet $disk_free")"

info7="$(color $title "Memory") $(color $muted "..")$(color $title "$colon") $(color $second "$memory_usage") $(color $muted "$bullet $memory_free")"

# SECOND COLUMN
info2="$(color $title "Temp") $(color $muted "....")$(color $title "$colon") $(color $second "$temperatureÂ°C")"

info4="$(color $title "CPU") $(color $muted ".....")$(color $title "$colon") $(color $second "$cpu_usage% ($process_count)")"

info6="$(color $title "Users") $(color $muted "...")$(color $title "$colon") $(color $second "$user_count")"

info8="$(color $title "IP") $(color $muted "......")$(color $title "$colon") $(color $second "$ip")"

# OUTPUT
if [[ "$ASCII_ART" == "true" ]]; then
    echo -e "   $(color $second "   .~~.   .~~.   ")"
    echo -e "   $(color $second "  '. \ ' ' / .'  ")   $info1"
    echo -e "   $(color $accent "   .~ .~~~..~.   ")   $info3"
    echo -e "   $(color $accent "  : .~.'~'.~. :  ")   $info5"
    echo -e "   $(color $accent " ~ (   ) (   ) ~ ")   $info7"
    echo -e "   $(color $accent "( : '~'.~.'~' : )")   $info2"
    echo -e "   $(color $accent " ~ .~ (   ) ~. ~ ")   $info4"
    echo -e "   $(color $accent "  (  : '~' :  )  ")   $info6"
    echo -e "   $(color $accent "   '~ .~~~. ~'   ")   $info8"
    echo -e "   $(color $accent "       '~'       ")"
else
    echo -e "                                                              ${info2}\r   ${info1}"
    echo -e "                                                              ${info4}\r   ${info3}"
    echo -e "                                                              ${info6}\r   ${info5}"
    echo -e "                                                              ${info8}\r   ${info7}"
fi
